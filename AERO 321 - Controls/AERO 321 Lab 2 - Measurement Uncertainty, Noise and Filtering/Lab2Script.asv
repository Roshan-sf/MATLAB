%Roshan Jaiswal-Ferri
%Section - 
%Aero 321 Lab 2: 10/11/24

%% Workspace Prep

format long     %Allows for more accurate decimals
close all;      %Clears all
clear all;      %Clears Workspace
clc;            %Clears Command Window

%% PART 1: Data interp

dist = readmatrix('DistanceData1');
fastDist = readmatrix('DistanceDataFast.csv');
fastDist = fastDist(532:end,:);

DataMU = clean(readmatrix('DistanceDataMovingUnfiltered.csv'));
DataMF = clean(readmatrix('DistanceDataMovingFiltered5.csv'));
Dim1 = clean(readmatrix('Dimension1.csv'));
Dim2 = clean(readmatrix('Dimension2.csv'));
FiveData = clean(readmatrix('5DataStreams.csv'));
DataMU = DataMU(1:222,:);
DataMF = DataMF(1:203,:);

Dim1 = Dim1(6:105,:);
Dim2 = Dim2(6:105,:);

%% Math for 4.2

expected = 10; %cm
expected2 = 7.62; %cm

[avg1, stand_dev1, Err1] = interp(dist, expected);
[avg2, stand_dev2, Err2] = interp(fastDist, expected);
[avg3, stand_dev3, Err3] = interp(Dim1, expected2);


[h, p, stats] = chi2gof(dist(:,2), 'CDF', {@normcdf, avg1, stand_dev1});
[h2, p2, stats2] = chi2gof(fastDist(:,2), 'CDF', {@normcdf, avg2, stand_dev2});
[h3, p3, stats3] = chi2gof(Dim1(:,2), 'CDF', {@normcdf, avg3, stand_dev3});

chiVal1 = stats.chi2stat;
chiVal2 = stats2.chi2stat;
chiVal3 = stats3.chi2stat;

disp('4a: ');
disp(['Mean Dist (10hz): ', num2str(avg1)]);
disp(['Mean Dist (100hz): ', num2str(avg2)]);
disp(['Mean Dist (Filtered): ', num2str(avg3)]);
disp(' ');
disp('4b: ');
disp(['Standard Deviation (10hz): ', num2str(stand_dev1)]);
disp(['Standard Deviation (100hz): ', num2str(stand_dev2)]);
disp(['Standard Deviation (Filtered): ', num2str(stand_dev3)]);
disp(' ');
disp('4c');
disp(['Standard error of mean (10hz): ', num2str(Err1)]);
disp(['Standard error of mean (100hz): ', num2str(Err2)]);
disp(['Standard error of mean (Filtered): ', num2str(Err3)]);
disp(' ');
disp('4e');
disp(['chi^2 test (10hz): ', num2str(chiVal1)]);
disp(['chi^2 test (100hz): ', num2str(chiVal2)]);
disp(['chi^2 test (Filtered): ', num2str(chiVal1)]);




%% PLOTS

figure
plot(DataMU(:,1),DataMU(:,2))
hold on
plot(DataMF(:,1),DataMF(:,2))
xlabel('Time S')
ylabel('Dist cm')
legend('Unfiltered', 'Filtered', Location='best')
title('Filtered vs Unfiltered')

figure
plot(FiveData(:,1),FiveData(:,2))
hold on
plot(FiveData(:,1),FiveData(:,2))
plot(FiveData(:,1),FiveData(:,3))
plot(FiveData(:,1),FiveData(:,4))
plot(FiveData(:,1),FiveData(:,5))
plot(FiveData(:,1),FiveData(:,6))
xlabel('Time S')
ylabel('Dist cm')
legend('0.9', '0.7', '0.5', '0.3', '0.1', Location='best')
title('Different Alpha Values')



%% PART 7: Finding Area

%Measured Values using ruler
x = 4.826; %cm
y = 13.335; %cm
A = 0.003; %estimated tolerance of ultrasonic sensor

%Average data reading from sensor
dellX = mean(Dim1(:,2)); 
dellY = mean(Dim2(:,2)); 

%Error in a sum (Chapter 4.14.2)
Ex = sqrt(((A*dellX)^2)+(x^2)); 
Ey = sqrt(((A*dellY)^2)+(y^2)); 
fx = Ex/(dellX+x);
fy = Ey/(dellY+y);

SxMax = (dellX+x)*(1+fx); 
SxMin = (dellX+x)*(1-fx); 

SyMax = (dellY+y)*(1+fy); 
SyMin = (dellY+y)*(1-fy);

%Max and Min Area with Error
AMax = SxMax*SyMax; %cm^2
AMin = SxMin*SyMin; %cm^2

disp(['Max A+DellA: ', num2str(AMax)]);
disp(['Min A+DellA: ', num2str(AMin)]);

%% Functions

function [clean] = clean(dirty) %assuming time in ms, will give S
    
    tC = dirty(1,1) - 1;
    dirty(:,1) = dirty(:,1) - tC;
    clean = dirty;
    clean(:,1) = dirty(:,1)./1000;

end

function [avg, stand_dev, Err] = interp(dataVec, expected)

    avg = mean(dataVec(:,2));
    stand_dev = std(dataVec(:,2));
    Err = abs(((avg-expected)/expected)*100);

end
